name: CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write   # <-- required for GHCR push

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build with Maven
        run: ./mvnw -DskipTests=false -B clean verify

      - name: Extract project version
        id: mvn
        run: echo "version=$(./mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:3.5.0:exec)" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/kafka-application:latest
            ghcr.io/${{ github.repository_owner }}/kafka-application:${{ steps.mvn.outputs.version }}

  # (Optional) simple SSH deploy to a VM with Docker installed
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            set -e
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository_owner }}/kafka-application:latest

            mkdir -p ~/kafka-app/config
            # (Put application.yml there once, see step D)

            docker rm -f kafka-app || true
            docker run -d --name kafka-app \
              -p 8080:8080 \
              -e JAVA_OPTS="-Xms256m -Xmx512m" \
              -v ~/kafka-app/config:/app/config:ro \
              ghcr.io/${{ github.repository_owner }}/kafka-application:latest
