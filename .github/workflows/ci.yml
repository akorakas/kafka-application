name: CI

on:
  push:
    branches: ["**"]         # build on every branch push
    tags: ["v*"]             # and version tags
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write        # needed for GHCR push

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make Maven wrapper executable
        run: chmod +x mvnw

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build with Maven (run tests)
        run: ./mvnw -B clean verify

      # Login to GHCR for EVERY branch so we can push branch-tagged images
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate tags/labels automatically:
      #  - :<branch> for branch builds (e.g. feature-sinks-and-error-handler)
      #  - :sha-<shortsha> for all builds
      #  - :latest ONLY on main
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=sha-,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # (optional) deploy job stays restricted to main
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            set -e
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository }}/kafka-application:latest
            docker rm -f kafka-app || true
            docker run -d --name kafka-app \
              -p 8080:8080 \
              -e JAVA_OPTS="-Xms256m -Xmx512m" \
              -v ~/kafka-app/config:/app/config:ro \
              ghcr.io/${{ github.repository }}/kafka-application:latest
